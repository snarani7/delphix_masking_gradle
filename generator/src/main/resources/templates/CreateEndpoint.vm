package com.delphix.masking.initializer.maskingApi.endpointCaller;

import com.delphix.masking.initializer.Utils;
import com.delphix.masking.initializer.exception.ApiCallException;
import com.delphix.masking.initializer.Utils;
import com.delphix.masking.initializer.pojo.${ClassName};
#foreach( $memberVariable in $memberVariables )
#if ( $memberVariable.listType && $memberVariable.listType != "String" )
import com.delphix.masking.initializer.pojo.${memberVariable.listType};
#end
#end
import java.util.List;

public class Post${ClassName} extends PostApiCall {

    private static final String Post_${CLASS_NAME}_PATH = "${endpointPath}";
    private ${ClassName} ${className};

    @Override
    public void setResponse(String responseBody) {
        this.${className}.set${idField}(Utils.getClassFromJson(responseBody, ${ClassName}.class).get${idField}());
        id = this.${className}.get${idField}().toString();
    }

    @Override
    public String getEndpoint() {
        return Post_${CLASS_NAME}_PATH;
    }

    @Override
    protected void handle409(ApiCallDriver apiCallDriver, String body, boolean replace) throws ApiCallException {
        Get${ClassName}s get${ClassName}s = new Get${ClassName}s();
        apiCallDriver.makeGetCall(get${ClassName}s);
        for (${ClassName} ${className}: get${ClassName}s.get${ClassName}s()) {
            if (!${className}.get${nameField}().equalsIgnoreCase(name)) {
                continue;
            }
#if ($parentIdField)
            if (!${className}.get${parentIdField}().equals(parentId)) {
                continue;
            }
#end
            id = ${className}.get${idField}().toString();
            this.${className}.set${idField}(${className}.get${idField}());
#if ( $putAllowed )
            if (replace) {
                ${ClassName} tmp = Utils.getClassFromJson(body, ${ClassName}.class);
                tmp.set${idField}(${className}.get${idField}());
                Put${ClassName} put${ClassName} = new Put${ClassName}(tmp);
                apiCallDriver.makePutCall(put${ClassName});
            }
#end
        }
    }
#if ($parentIdField)
    public Post${ClassName}(${ClassName} ${className}, Integer parentId) {
        ${className}.set${parentIdField}(parentId);
        this.parentId = parentId;
#else
    public Post${ClassName}(${ClassName} ${className}) {
#end
        this.${className} = $className;
#foreach( $memberVariable in $memberVariables )
#if ($memberVariable.listType)
        List<$memberVariable.listType> ${memberVariable.name} = ${className}.get${memberVariable.getUpperName()}();
        #if (!$memberVariable.notResetToNull)
                ${className}.set${memberVariable.getUpperName()}(null);
        #end
#end
#end

        body = Utils.getJSONFromClass(${className});
        name = ${className}.get${nameField}();
#if ( $isMultiPart )
        isMultiPart = ${isMultiPart};
#end

#foreach( $memberVariable in $memberVariables )
#if ($memberVariable.listType)
        ${className}.set${memberVariable.getUpperName()}(${memberVariable.name});
#end
#end

    }
}
